<?xml version="1.0"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wuhx</title>
    <link>http://xun.im</link>
    <atom:link href="http://xun.im/feed.xml" rel="self" type="application/rss+xml" />
    <description>personal blog, scala, akka,</description>
    <language>en-us</language>
    <pubDate>Tue, 02 May 2017 15:31:34 +0800</pubDate>
    <lastBuildDate>Tue, 02 May 2017 15:31:34 +0800</lastBuildDate>

    
      <item>
        <title>CloudMonad更新</title>
        <link>http://xun.im/2017/05/01/cloudmonad-beta/</link>
        <pubDate>Mon, 01 May 2017 00:00:00 +0800</pubDate>
        <author>wuhx</author>
        <description>&lt;p&gt;&lt;a href=&quot;/2017/04/23/cloudmonad/&quot;&gt;CloudMonad测试版&lt;/a&gt;发布后，收到了很多用户的支持和反馈，非常感谢！&lt;/p&gt;

&lt;h5 id=&quot;section&quot;&gt;此次更新内容&lt;/h5&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;UI细节上的&lt;a href=&quot;https://github.com/wuhx/neveread.com/issues&quot;&gt;BUG&lt;/a&gt;，由于计划全面改版UI，所以只是记录了ISSUE。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;很多用户对Cron表达式不熟悉，设置了无效的定时器，导致CloudMonad没有正确运行。&lt;/p&gt;

    &lt;p&gt;为此特地新增了提示。&lt;img src=&quot;https://defyun.oss-cn-shanghai.aliyuncs.com/blog/misc/newCron.png&quot; alt=&quot;cron界面&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;增加了 &lt;a href=&quot;/2017/04/30/example-taobao-price-monitor/&quot;&gt;例9:针对淘宝商品特定套餐的价格变化监控&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;启用新域名 &lt;a href=&quot;https://cloudmonad.com&quot;&gt;https://cloudmonad.com&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://defyun.oss-cn-shanghai.aliyuncs.com&quot;&gt;备用链接&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;为每位用户增加了&lt;a href=&quot;https://cloudmonad.com/#userinfo&quot;&gt;推荐链接&lt;/a&gt;，暂时没推荐奖励，但后台会有记录，如果这个项目集齐足够多用户继续开发下去，会根据注册时间和推荐人数在权限和CloudPoint上做相应奖励。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;完善说明文档&lt;a href=&quot;/2017/04/23/cloudmonad/&quot;&gt;CloudMonad:组装你的私人互联网&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
      </item>
    
      <item>
        <title>例9:针对淘宝商品特定套餐的价格变化监控</title>
        <link>http://xun.im/2017/04/30/example-taobao-price-monitor/</link>
        <pubDate>Sun, 30 Apr 2017 00:00:00 +0800</pubDate>
        <author>wuhx</author>
        <description>&lt;p&gt;淘宝商品的具体价格需要在选定套餐后才能确定，否则是一个范围值。&lt;br /&gt;
&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-9/taobao.png&quot; alt=&quot;feed&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-9/taobao2.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;利用CloudMonad的可定制性，我们可以实现针对特定套餐的价格监控&lt;/p&gt;

&lt;h5 id=&quot;section&quot;&gt;详细步骤&lt;/h5&gt;

&lt;h5 id=&quot;feed&quot;&gt;Feed&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-9/feed1.png&quot; alt=&quot;feed&quot; /&gt;&lt;br /&gt;
&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-9/feed2.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;cron&quot;&gt;Cron配置：每天零点执行&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-4/cron.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;spec&quot;&gt;Spec&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-9/spec.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;action&quot;&gt;Action&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-9/action.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-1&quot;&gt;执行成功时的日志&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-9/log.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>微信机器人技术总结</title>
        <link>http://xun.im/2017/04/26/weixin-robots-tecnicical-review/</link>
        <pubDate>Wed, 26 Apr 2017 00:00:00 +0800</pubDate>
        <author>wuhx</author>
        <description>&lt;p&gt;本文简单从原因，技术原理，稳定性三个角度总结一下微信机器人技术。如有遗漏，欢迎补充。&lt;/p&gt;

&lt;h5 id=&quot;section&quot;&gt;定义&lt;/h5&gt;

&lt;p&gt;本文的微信机器人是指：用程序手段驱动个人微信号实现自动发送微信消息，邀请好友，发朋友圈等功能。&lt;/p&gt;

&lt;h5 id=&quot;section-1&quot;&gt;原因&lt;/h5&gt;

&lt;p&gt;使用微信机器人的原因：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;微信开放接口限制多，功能少。&lt;/li&gt;
  &lt;li&gt;省钱（微信开发者要缴年费）&lt;/li&gt;
  &lt;li&gt;要做一些腾讯协议不允许的事（黑产）&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;section-2&quot;&gt;技术原理&lt;/h4&gt;

&lt;p&gt;微信机器人技术大概有这几类：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;用Selenium等技术驱动浏览器登录Web微信，并执行自动操作。&lt;/li&gt;
  &lt;li&gt;用各种编程语言实现Web微信协议&lt;/li&gt;
  &lt;li&gt;逆向微信客户端代码增加功能重新打包。&lt;/li&gt;
  &lt;li&gt;使用Xposed等框架在手机系统层面修改微信客户端行为，实现特定功能。&lt;/li&gt;
  &lt;li&gt;分析微信通讯协议并重新实现一个第三方客户端。&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;seleniumweb&quot;&gt;1. Selenium驱动浏览器登录Web微信&lt;/h5&gt;

&lt;p&gt;Selenium驱动浏览器的原理，使这种方式相当于微信官方实现的机器人。&lt;/p&gt;

&lt;p&gt;特点：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;需要手机扫码协助登录&lt;/li&gt;
  &lt;li&gt;实现简单，无技术门槛。&lt;/li&gt;
  &lt;li&gt;只能回复消息，拉群，爬公众号，不能发朋友圈。&lt;/li&gt;
  &lt;li&gt;不稳定，个人测试最长一个月会掉线一次。&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;web&quot;&gt;2. 编程语言实现Web微信协议&lt;/h5&gt;

&lt;p&gt;特点：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;需要手机扫码协助登录。&lt;/li&gt;
  &lt;li&gt;实现简单，Web微信为明文协议，分析比较容易，而且网上有开源实现。&lt;/li&gt;
  &lt;li&gt;只能回复微信消息，拉群，爬公众号，不能发朋友圈。&lt;/li&gt;
  &lt;li&gt;比Selenium方式更不稳定。&lt;br /&gt;
测试了JAVA版本，登录几个小时后就掉线了。当然测试时间比较久了，可能软件有更新，也不能代表其他语言版本的稳定性。&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;section-3&quot;&gt;3. 逆向微信客户端代码增加功能重新打包&lt;/h5&gt;

&lt;p&gt;特点：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;无需手机扫码登录。&lt;/li&gt;
  &lt;li&gt;实现难度相对较高，需要逆向知识。&lt;/li&gt;
  &lt;li&gt;属于恶意使用，有被腾讯封号的风险。&lt;/li&gt;
  &lt;li&gt;能实现回复微信消息，发朋友圈等各种功能。&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;xposed&quot;&gt;4. Xposed&lt;/h5&gt;

&lt;p&gt;Xposed的原理是在不修改App代码的情况下，Hook各种系统函数或内部函数调用实现修改App功能。&lt;br /&gt;
因此这种方式除了是否属于腾讯定义的恶意使用，其他和逆向重新打包方式类似。&lt;/p&gt;

&lt;p&gt;特点：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;无需手机扫码登录。&lt;/li&gt;
  &lt;li&gt;实现难度相对较高，需要逆向知识。&lt;/li&gt;
  &lt;li&gt;可能会被腾讯认为恶意使用，有被封号的危险。&lt;/li&gt;
  &lt;li&gt;能实现回复微信消息，发朋友圈等各种功能。&lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;section-4&quot;&gt;5. 分析微信通讯协议并重新实现一个第三方客户端&lt;/h5&gt;

&lt;p&gt;微信通讯有长连接短连接两种形式，分别用于消息收发和一些控制消息。&lt;/p&gt;

&lt;p&gt;其中长连接协议是一个&lt;a href=&quot;https://mp.weixin.qq.com/s?__biz=MzAwNDY1ODY2OQ==&amp;amp;mid=2649286266&amp;amp;idx=1&amp;amp;sn=f5d049033e251cccc22e163532355ddf&quot;&gt;TLS1.3&lt;/a&gt;变种。&lt;/p&gt;

&lt;p&gt;这种方式难度最大，用于实现微信机器人这样的功能太浪费。&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>模拟浏览器设置</title>
        <link>http://xun.im/2017/04/23/setting-zhizhu/</link>
        <pubDate>Sun, 23 Apr 2017 00:00:00 +0800</pubDate>
        <author>wuhx</author>
        <description>&lt;p&gt;所有需要用到模拟浏览器的Feed或者Action会在其设置页面有一个IE浏览器图标，点击即可设置。&lt;/p&gt;

&lt;p&gt;可以设置的内容包括：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;UserAgent&lt;/strong&gt; ：设置浏览器UA，选择预设的UA或自行输入。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;最大执行时间&lt;/strong&gt; ：设置一次爬取最长耗时，执行时间超过这个值将返回超时失败。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;使用JavaScript&lt;/strong&gt; ：加载页面时执行包含的JavaScript代码，如无需要可关闭降低资源消耗。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;加载图片&lt;/strong&gt; ：加载网页中的图片，如无需要可关闭降低资源消耗。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Http Header&lt;/strong&gt; ：发起的Http请求将附带的HTTP头，可包含Cookie等信息。格式为冒号分隔的多行Key和Value，可直接从Chrome控制台拷贝。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;代理&lt;/strong&gt; : 设置代理，支持Socks和HTTP代理。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/misc/zhizhuicon.png&quot; alt=&quot;设置图标&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/misc/zhizhu.png&quot; alt=&quot;设置图标&quot; /&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>定时器设置</title>
        <link>http://xun.im/2017/04/23/setting-cron/</link>
        <pubDate>Sun, 23 Apr 2017 00:00:00 +0800</pubDate>
        <author>wuhx</author>
        <description>&lt;p&gt;定时器用于定时驱动Feed或Action的执行，其内容是一个Cron表达式。&lt;/p&gt;

&lt;p&gt;所有需要用到定时器的Feed或者Action会在其设置页面有一个日历图标，点击即可设置。定时时间可以精确到秒，但后端会限制两次运行的最小间隔为5分钟。&lt;/p&gt;

&lt;p&gt;Cron表达式格式请参照 &lt;a href=&quot;http://www.quartz-scheduler.org/documentation/quartz-2.1.x/tutorials/crontrigger.html&quot;&gt;quartz文档&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;注意事项：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;选择输入框只是辅助输入，生成Cron表达式可直接编辑。&lt;/li&gt;
  &lt;li&gt;日期和星期不能同时设置，其中一项必须选择「忽略」。&lt;/li&gt;
  &lt;li&gt;Special characters只支持「*」「?」「,」和「-」&lt;/li&gt;
  &lt;li&gt;表达式元素不包含「年」选项&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/misc/cron.png&quot; alt=&quot;设置图标&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/misc/cronui.png&quot; alt=&quot;设置界面&quot; /&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>imhuman验证码识别</title>
        <link>http://xun.im/2017/04/23/imhuman/</link>
        <pubDate>Sun, 23 Apr 2017 00:00:00 +0800</pubDate>
        <author>wuhx</author>
        <description>&lt;p&gt;imhuman验证码识别的基本原理：&lt;/p&gt;

&lt;p&gt;将浏览器当前验证页面镜像到另外一个网址，然后通知用户（通过微信消息）在该镜像页面中操作，imhuman在后台记录用户操作并在真实网页上重放该操作。从而通过任何验证码的验证（因为操作者本来就是人类）。&lt;/p&gt;

&lt;p&gt;具体应用可以参考：&lt;br /&gt;
&lt;a href=&quot;/2017/04/23/example-12306/&quot;&gt;例6:12306车票购买&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;/2017/04/23/example-auto-weixin-mp/&quot;&gt;例7:微信公众号自动发文&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;一些镜像页面的例子：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;微信公众号登录验证：收到imhuman验证通知消息后长按图片识别登录。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://cloudmonad.com/imhuman.html#c435c895-2250-4918-92bb-4641665a5fb6&quot;&gt;https://cloudmonad.com/imhuman.html#c435c895-2250-4918-92bb-4641665a5fb6&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;极验证：拖动图片让拼图重合（只能在PC端操作）&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://cloudmonad.com/imhuman.html#7b2a1485-b5f4-433e-ab30-e58e0966979f&quot;&gt;https://cloudmonad.com/imhuman.html#7b2a1485-b5f4-433e-ab30-e58e0966979f&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;12306识图：点击正确图片。&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;a href=&quot;https://cloudmonad.com/imhuman.html#b6a050e1-5ce3-4321-9ff4-3f85c5842bc2&quot;&gt;https://cloudmonad.com/imhuman.html#b6a050e1-5ce3-4321-9ff4-3f85c5842bc2&lt;/a&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>例1:微信消息Kindle推送</title>
        <link>http://xun.im/2017/04/23/example-weixin-to-kindle/</link>
        <pubDate>Sun, 23 Apr 2017 00:00:00 +0800</pubDate>
        <author>wuhx</author>
        <description>&lt;p&gt;本例介绍如何设置实现微信消息推送Kindle。&lt;br /&gt;
原理：&lt;br /&gt;
从微信Feed中提取出文章链接地址，满足Spec条件后，将其作为输入传递给KindleAction，实现文章推送。关于Feed，Spec和Action的概念，请参考&lt;a href=&quot;/2017/04/23/cloudmonad/&quot;&gt;这里&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;微信Feed的输出有3个字段：url，title和content。&lt;/p&gt;

&lt;p&gt;当你在微信或其他App里分享链接给微信机器人时，title和url字段分别对应分享文章的标题和链接，content字段为空&lt;/p&gt;

&lt;p&gt;当你发一条文本消息给微信机器人时，content字段是文本消息的内容，title和url字段为空。&lt;/p&gt;

&lt;p&gt;与之对应的，微信消息推送Kindle有两种方式：&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在微信或其他App里分享链接给微信机器人。&lt;br /&gt;
这种方式下，第二步Spec时只要检测url字段不为空，第三步触发Action时，将url字段传递给KindleAction。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;发送链接文本消息给微信机器人。&lt;/p&gt;

    &lt;p&gt;这时需要检测文本消息的内容是否是一个http链接地址，所以在第二步Spec时，检测content字段，判断内容是否包含http（也可以用正则表达式检测或直接判断是否非空），第三步触发Action时将content字段传递给KindleAction。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;section&quot;&gt;推送方式1: 链接分享&lt;/h5&gt;

&lt;p&gt;登录后点击&lt;a href=&quot;https://cloudmonad.com/#create&quot;&gt;新建&lt;/a&gt;，在第一步设置输入Feed时选择微信Feed&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-1/feed.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-1/spec.png&quot; alt=&quot;spec&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-1/action.png&quot; alt=&quot;action&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;section-1&quot;&gt;推送方式2: 消息文本分享&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-1/spec2.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-1/action2.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>例3:微信分享链接推送到RSS源</title>
        <link>http://xun.im/2017/04/23/example-weixin-rss/</link>
        <pubDate>Sun, 23 Apr 2017 00:00:00 +0800</pubDate>
        <author>wuhx</author>
        <description>&lt;p&gt;本例介绍如何实现将微信分享的链接加入到一个私人的RSS Feed。&lt;br /&gt;
&lt;strong&gt;原理&lt;/strong&gt;：&lt;br /&gt;
用户从微信或其他App分享一条链接给微信机器人，对应的微信Feed生成一条微信记录，Spec条件检查通过后，RssAction将其加入用户私有RSS源供阅读器订阅。&lt;/p&gt;

&lt;p&gt;注意：&lt;br /&gt;
1. 微信Feed作为一个数据源会publish给所有的订阅者，所以如果你已经设置了微信推送到Kindle，这里再设置推送到Rss并不会冲突。&lt;br /&gt;
2. RSS源地址暂不支持自定义，请在运行日志中查找类似https://myrss.oss-cn-shanghai.aliyuncs.com/58d098695c497d0057d23b9b/feed.xml 的地址&lt;/p&gt;

&lt;h5 id=&quot;section&quot;&gt;详细步骤&lt;/h5&gt;

&lt;h5 id=&quot;feed&quot;&gt;Feed设置&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-1/feed.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;spec&quot;&gt;Spec设置&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-1/spec.png&quot; alt=&quot;spec&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;action&quot;&gt;Action设置&lt;/h5&gt;
&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-3/action.png&quot; alt=&quot;action&quot; /&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>例2:利用搜狗微信搜索推送公众号文章更新到Kindle。</title>
        <link>http://xun.im/2017/04/23/example-sougou-to-kindle/</link>
        <pubDate>Sun, 23 Apr 2017 00:00:00 +0800</pubDate>
        <author>wuhx</author>
        <description>&lt;p&gt;本例介绍如何设置实现利用搜狗微信搜索监控公众号文章更新并推送到Kindle。&lt;br /&gt;
&lt;strong&gt;原理&lt;/strong&gt;：&lt;br /&gt;
根据用户提供的公众号微信ID和Cron定时设置，定时访问&lt;a href=&quot;http://weixin.sogou.com/weixin?type=1&amp;amp;s_from=input&amp;amp;query=idxgh2013&amp;amp;ie=utf8&quot;&gt;搜狗微信搜索页面&lt;/a&gt;并点击第一个搜索结果，列出该公众号最新群发的文章列表，并将该列表和上一次执行时获取的列表对比，判断是否有更新文章，如果有更新，则将更新的文章推送到Kindle。&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Feed选择&lt;code class=&quot;highlighter-rouge&quot;&gt;搜狗微信公众号文章更新&lt;/code&gt;，输入公众号的微信ID并配置好Cron定时器，Cron定时器的介绍请看&lt;a href=&quot;/2017/04/23/setting-cron/&quot;&gt;这里&lt;/a&gt;。&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Spec选择&lt;code class=&quot;highlighter-rouge&quot;&gt;列表触发&lt;/code&gt; ，触发方式选择&lt;code class=&quot;highlighter-rouge&quot;&gt;返回列表有更新&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;这里需要注意的是：&lt;/p&gt;

    &lt;p&gt;列表更新要设置一个参考字段，用于判定列表是否更新，可以把它理解为数据库中的主键，只要两条记录的主键值相等，就可以判断是同一条记录。否则需要将记录中的说有字段都比较一下才能确定两条记录是否相同。&lt;/p&gt;

    &lt;p&gt;由于第一步选择的&lt;code class=&quot;highlighter-rouge&quot;&gt;搜狗微信公众号文章更新&lt;/code&gt;Feed的输出有&lt;code class=&quot;highlighter-rouge&quot;&gt;标题&lt;/code&gt;和&lt;code class=&quot;highlighter-rouge&quot;&gt;URL&lt;/code&gt;两个字段，这里会列出这两个选项，这里选择&lt;code class=&quot;highlighter-rouge&quot;&gt;标题&lt;/code&gt;作为参考字段。&lt;/p&gt;

    &lt;p&gt;也就是说，只要两条记录的标题字段相同就判断它们是同一条记录。&lt;/p&gt;

    &lt;p&gt;这么做的原因是：weixin.sogou.com上的公众号文章链接都是临时链接，每次返回的结果都不一样，需要排除其干扰。&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h5 id=&quot;section&quot;&gt;详细步骤&lt;/h5&gt;

&lt;h5 id=&quot;id&quot;&gt;1.获取公众号微信ID&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-2/search.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;feed&quot;&gt;2.设置Feed&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-2/feed.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;spec&quot;&gt;3.设置Spec&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-2/spec.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;

&lt;h5 id=&quot;action&quot;&gt;4.设置Action&lt;/h5&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-2/action.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;
</description>
      </item>
    
      <item>
        <title>例8:利用RestApi Action实现方糖微信通知</title>
        <link>http://xun.im/2017/04/23/example-rest-api/</link>
        <pubDate>Sun, 23 Apr 2017 00:00:00 +0800</pubDate>
        <author>wuhx</author>
        <description>&lt;p&gt;本例介绍利用RestApi Action实现方糖微信通知&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://sc.ftqq.com/&quot;&gt;方糖&lt;/a&gt;是一个服务号实现的微信通知服务。CloudMonad除了支持利用自己的微信机器人发送微信消息外，也可通过RestApi调用方糖接口发送微信消息。&lt;/p&gt;

&lt;p&gt;在RestAction设置中，将url设置为你的方糖接口地址，method选择GET即可。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://defyun.oss-cn-shanghai.aliyuncs.com/blog/example-8/action.png&quot; alt=&quot;feed&quot; /&gt;&lt;/p&gt;
</description>
      </item>
    

  </channel>
</rss>
